--- pexec.pl.patch1	2011-09-09 16:18:44.000000000 -0600
+++ pexec.pl	2011-09-09 16:25:11.278531448 -0600
@@ -38,6 +38,8 @@
 unshift (@ARGV, split(/\s+/, $ENV{'PEXEC'})) if (exists $ENV{'PEXEC'});
 
 local $opt_a;				# all
+local $opt_bpsh;			# bpsh remote
+local $opt_bpcp;			# bpcp to remote
 local $opt_debug;			# debug
 local $opt_fanout=256;			# remote-copy fan-out
 local $opt_h;				# help
@@ -66,6 +68,9 @@
 
 pod2usage(2) unless &GetOptions(
    'a|all'		=> \$opt_a,
+   'bpsh'		=> \$opt_bpsh,
+   'bpcp'		=> \$opt_bpcp,
+   'bpcp-opts=s'	=> \$opt_opts,
    'd|debug'		=> \$opt_debug,
    'exit-success=s'	=> \$opt_success,
    'fan-out=i'		=> \$opt_fanout,
@@ -114,6 +119,10 @@
    }
 }
 
+pod2usage(qq|\n$prog: option '--rsh' cannot be used with option '--bpsh'\n|) if
+   (defined($opt_rsh) && defined($opt_bpsh));
+pod2usage(qq|\n$prog: option '--ssh' cannot be used with option '--bpsh'\n|) if
+   (defined($opt_ssh) && defined($opt_bpsh));
 pod2usage(qq|\n$prog: option '-l' cannot be used with without '--rsh' or '--ssh'\n|)
    if (defined($opt_l) && !(defined($opt_rsh) || defined($opt_ssh)));
 pod2usage(qq|\n$prog: option '--rsh' cannot be used with option '--ssh'\n|) if
@@ -155,11 +164,19 @@
 	 pod2usage("\n$prog: --ping-host: malformed: $opt_ping_host\n")
       }
 
+      if (defined($opt_bpcp) || defined($opt_bpsh)) {
+	 pod2usage("\n$prog: option to '--ping-host' should contain 'n%host%' for BProc commands\n")
+	    unless ($opt_ping_host =~ /n\%host\%/);
+      }
    } else {
-      $opt_ping_host = '%host%';
+      $opt_ping_host = (defined($opt_bpcp) || defined($opt_bpsh)
+	 ? 'n%host%'
+	 : '%host%'
+      );
    }
 }
 
+my @bpcp_opts  = ('-rp');		# default bpcp options
 my @rcp_opts   = ('-rp');		# default rcp options
 my @rsync_opts = ('-aq');		# default rsync options
 my @scp_opts   = ('-Brpq');		# default scp options
@@ -167,6 +184,8 @@
 local $opt_rcpy = undef;
 local @opt_rcpy_opts = split(/\s+/, $opt_opts) if (defined($opt_opts));
 if (defined($opt_rcp)) {
+   pod2usage(qq|\n$prog: option '--rcp' cannot be used with option '--bpcp'\n|)
+      if (defined($opt_bpcp));
    pod2usage(qq|\n$prog: option '--rcp' cannot be used with option '--scp'\n|)
       if (defined($opt_scp));
    pod2usage(qq|\n$prog: option '--rcp' cannot be used with option '--rsync'\n|)
@@ -176,6 +195,8 @@
    $ping_port = getservbyname('shell', 'tcp') unless (defined($ping_port));
    $ping_proto = 'syn' unless (defined($ping_proto));
 } elsif (defined($opt_scp)) {
+   pod2usage(qq|\n$prog: option '--scp' cannot be used with option '--bpcp'\n|)
+      if (defined($opt_bpcp));
    pod2usage(qq|\n$prog: option '--scp' cannot be used with option '--rsync'\n|)
       if (defined($opt_rsync));
    $opt_rcpy = 'scp';
@@ -191,9 +212,16 @@
    push(@opt_rcpy_opts, '-e', $opt_rsync_rsh);
    $ping_port = getservbyname('rsync', 'tcp') unless (defined($ping_port));
    $ping_proto = 'syn' unless (defined($ping_proto));
+} elsif (defined($opt_bpcp)) {
+   pod2usage(qq|\n$prog: option '--bpcp' cannot be used with option '--rsync'\n|)
+      if (defined($opt_rsync));
+   $opt_rcpy = 'bpcp';
+   @opt_rcpy_opts = @bpcp_opts unless(@opt_rcpy_opts);
 }
 
 if (defined($opt_rcpy)) {
+   pod2usage(qq|\n$prog: option '--$opt_rcpy' cannot be used with option '--bpsh'\n|)
+      if (defined($opt_bpsh));
    pod2usage(qq|\n$prog: option '--$opt_rcpy' cannot be used with option '--ssh'\n|)
       if (defined($opt_ssh));
    pod2usage(qq|\n$prog: option '--$opt_rcpy' cannot be used with option '--rsh'\n|)
@@ -347,6 +375,11 @@
    $ping_proto = 'syn' unless (defined($ping_proto));
 }
 
+if (defined($opt_bpsh)) {
+   my @RLP = ('bpsh','-n','%host%');
+   unshift (@ARGV,@RLP);
+}
+
 if (defined($opt_P)) {
    if (defined($opt_rcpy)) {
       $opt_P = 1 unless $opt_P;		# default rcpy arity = 1
@@ -885,6 +918,17 @@
 		  }
 	       }
 	    }
+	 } elsif ($name =~ /^all(not)?(down|boot|error|unavailable|up)?$/i) {
+	    -x '/usr/bin/bpstat' || (push(@Machines,$name) , next M);
+	    open(BPSTAT, "bpstat -n $_ |") ||
+	       (push(@Machines,$name) , next M);
+	    foreach my $node (<BPSTAT>) {
+	       chop $node;
+	       if ($node =~ /^\d+$/) {
+		  push(@Machines, $node);
+	       }
+	    }
+	    close BPSTAT;
 	 } else {					# a single host
 	    push(@Machines,$name) unless ($name =~ /^$/);
 	 }
@@ -968,9 +1012,12 @@
 
 B<pexec> [B<-h>] [B<--man>]
 
-B<pexec> I<args> S<[B<-l> I<user>]> S<[B<-o> I<outfile>]> S<[B<--rsh>]>
+B<pexec> I<args> S<[B<-l> I<user>]> S<[B<-o> I<outfile>]> S<[B<--bpsh>]> S<[B<--rsh>]>
 S<[B<--ssh>]> B<cmd>
 
+B<pexec> I<args> S<B<--bpcp>>  S<[B<--bpcp-opts> I<opts>]> B<src> S<[B<src ...>]>
+[I<user@>]%host%:B<dest>
+
 B<pexec> I<args> S<B<--rcp>>   S<[B<--rcp-opts> I<opts>]>  B<src> S<[B<src ...>]>
 [I<user@>]%host%:B<dest>
 
@@ -1039,6 +1086,26 @@
 Permit B<cmd> to be run on the execution host if it is specified in the
 machine list (skipped by default).
 
+=item B<--bpsh>
+
+Remote B<cmd> execution via bpsh(1) (equivalent to S<"bpsh -n I<%host%>">).
+
+=item B<--bpcp> B<src> [B<src ...>] [I<user@>]%host%:B<dest>
+
+Distribute locally-resident B<src> (file or directory) to remote B<host:dest>
+using B<bpcp> for every host in the machine list.  Specifying more than one
+B<src> mandates that B<host:dest> be a directory name on the remote machine.
+I<User> must have BProc execute permission on every host in the machine
+list for successful operation!  Your current I<user> name is assumed if
+none is specified.  See the B<CAVEATS> section below if you have an
+unpatched B<bpcp> on your system.
+
+=item B<--bpcp-opts> I<opts>
+
+If B<--bpcp> is specified, pass the following I<opts> directly to B<bpcp>.
+If this option is omitted, I<opts> defaults to "I<-rp>" (recursive; preserve
+mode, ownership and timestamps).
+
 =item B<-d,--debug>
 
 Don't really execute anything, just print to STDOUT the B<cmd> that would
@@ -1051,7 +1118,7 @@
 values.  Note that fan-out for the remote file copy operations is only
 accomplished by proper exit status of B<cmd> as it is run by the hosts
 which comprise the machine list.  Requesting B<pexec> to run a remote copy
-operation via B<--rcp>, B<--rsync> or B<--scp> which succeeds
+operation via B<--bpcp>, B<--rcp>, B<--rsync> or B<--scp> which succeeds
 yet exits with an I<rc> outside this list will result in I<serial>
 operation!  On the other hand, cascading failure may ensue if you include a
 return code here which really does indicate failure of B<cmd>.  Default
@@ -1076,6 +1143,7 @@
 
 Include I<host> in the machine list.  Valid names are: hosts, netgroups,
 ranges, or a path to files containing these entities (newline separated).
+You may also use any valid BProc nodespec as an argument (see bpstat(1)).
 Each I<host> specification may be inter-mixed however always comma
 separated.  Netgroup names are invoked by using the "@" symbol, which acts
 as an intersection operator.  A single netgroup can be designated with a
@@ -1111,7 +1179,7 @@
 the default is 32-way parallelism; if B<-P> is omitted altogether, B<cmd> is
 executed serially on each machine in the list.
 
-In the case of B<--rcp>, B<--rsync> or B<--scp>, however, if
+In the case of B<--bpcp>, B<--rcp>, B<--rsync> or B<--scp>, however, if
 I<#> is omitted the default is to set B<P=1> and accomplish parallelism by
 B<cmd> fan-out (see B<--fan-out> above to limit the width).  Specifying larger
 values than I<1> might be desirable to take advantage of additional capabilities
@@ -1353,6 +1421,16 @@
 3. If you time out on a remote operation, the local process that transported you
 will terminate but any successful remote execution may proceed!
 
+4. Many (all?) released versions of B<bpcp> to date do not wait(2) for forked
+processes during 3rd party copies (remote to remote).  Being a derivative
+of rcp(1), exit status is often not set properly so B<pexec> proceeds
+happily; your B<src> appears to be copied successfully to B<host:dest> in a
+matter of seconds regardless of cluster size!  If you received this code
+as part of an RPM package, a patch to fix B<bpcp> resides in your
+distribution's %docdir.
+
+5. There is no well-defined bpsh/bpcp service port.
+
 =head1 REMOTE FILE COPY RESTRICTIONS
 
 1. It is assumed that password-less authentication as required by B<cmd> will
@@ -1366,12 +1444,12 @@
 of some machines and not on others, B<pexec> will certainly fail.
 
 3. B<pexec> does not check the validity any of the options specified by
-B<--rcp-opts>, B<--scp-opts>, B<--rsync-opts> or
+B<--bpcp-opts>, B<--rcp-opts>, B<--scp-opts>, B<--rsync-opts> or
 B<--rsync-rsh>; use with caution.
 
 =head1 SEE ALSO
 
-gethostbyname(3), netgroup(5), rsh(1), rcp(1),
+gethostbyname(3), I<bpcp -h>, bpsh(1), bpstat(1), netgroup(5), rsh(1), rcp(1),
 rsync(1), ssh(1), scp(1)
 
 =head1 AUTHOR
