--- clients/bpcp.c.wait	2003-08-29 15:46:56.000000000 -0600
+++ clients/bpcp.c	2006-09-19 08:33:28.000000000 -0600
@@ -60,6 +60,7 @@
 #include <string.h>
 #include <ctype.h>
 #include <sys/bproc.h>
+#include <sys/wait.h>
 
 #define	_PATH_CP	"/bin/cp"
 #define	OPTIONS "dfprt"
@@ -144,7 +145,7 @@
 
 	pid = bproc_rfork_io(node, &io, 1);
 	if (pid == -1) {
-		perror("rfork");
+		fprintf(stderr, "rcp: %d: rfork failed\n", node);
 		exit(1);
 	}
 	if (pid == 0) {
@@ -260,8 +261,8 @@
 static void
 toremote(const char *targ, int argc, char *argv[])
 {
-	int i, tos;
-	char *bp, *host, *src, *thost;
+	int i, tos, node;
+	char *bp, *host, *src, *thost, *check;
 
 	if (*targ == 0)
 		targ = ".";
@@ -283,9 +284,43 @@
 			host = host ? host+1 : argv[i];
 			if (!(bp = malloc(strlen(thost)+strlen(targ)+2)))
 				nospace();
+
+			node = strtol(host, &check, 0);
+			if (*check) {
+			    fprintf(stderr, "Invalid node number: %s\n", host);
+			    exit(1);
+			} 
+
+			if (bproc_access(node, BPROC_X_OK) != 0) {
+			   fprintf(stderr, "rcp: %d: %s\n", node, bproc_strerror(errno));
+			   exit(1);
+			}
+
+			node = strtol(thost, &check, 0);
+			if (*check) {
+			    fprintf(stderr, "Invalid node number: %s\n", thost);
+			    exit(1);
+			} 
+
+			if (bproc_access(node, BPROC_X_OK) != 0) {
+			   fprintf(stderr, "rcp: %d: %s\n", node, bproc_strerror(errno));
+			   exit(1);
+			}
+
 			sprintf(bp, "%s:%s", thost, targ);
 			remote_proc(host, src, bp, 0);
 			(void)free(bp);
+			{
+			   pid_t pid;
+			   int status;
+			   while ((pid = waitpid(0, &status, 0)) != -1) {
+			      if (!WIFEXITED(status) || WEXITSTATUS(status) != 0) {
+				 fprintf(stderr, "rcp: child exited, status=%d\n",
+				    WEXITSTATUS(status));
+				 exit(1);
+			      }
+			   }
+			}
 		} else {			/* local to remote */
 			if (rem == -1) {
 				host = thost;
@@ -310,8 +345,8 @@
 tolocal(int argc, char *argv[])
 {
  	static char dot[] = ".";
-	int i, len, tos;
-	char *bp, *host, *src;
+	int i, len, tos, node;
+	char *bp, *host, *src, *check;
 
 	for (i = 0; i < argc - 1; i++) {
 		if (!(src = colon(argv[i]))) {	/* local to local */
@@ -331,6 +366,18 @@
 			src = dot;
 		host = strchr(argv[i], '@');
 		host = host ? host+1 : argv[i];
+
+		node = strtol(host, &check, 0);
+		if (*check) {
+		    fprintf(stderr, "Invalid node number: %s\n", host);
+		    exit(1);
+		} 
+
+		if (bproc_access(node, BPROC_X_OK) != 0) {
+		   fprintf(stderr, "rcp: %d: %s\n", node, bproc_strerror(errno));
+		   exit(1);
+		}
+
 		rem = remote_proc(host, "-f", src, 0);
 		if (rem < 0) {
 			++errs;
